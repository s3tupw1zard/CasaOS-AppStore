name: safeline

services:
  postgres:
    container_name: safeline-pg
    restart: always
    image: ${IMAGE_PREFIX}/safeline-postgres${ARCH_SUFFIX}:15.2
    volumes:
      - /DATA/AppData/Safeline/resources/postgres/data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_USER=safeline-ce
      - POSTGRES_PASSWORD=dyrE4mfoHFhoBBbl5tKJrs8XfKr9aLV4CHPmmHE2Wt5aNWYwPbPy79XhuUd3vZcq
    networks:
      safeline-ce:
        ipv4_address: ${SUBNET_PREFIX}.2
    command: [postgres, -c, max_connections=600]
    healthcheck:
      test: pg_isready -U safeline-ce -d safeline-ce
    x-casaos:
      envs:
        - container: SUBNET_PREFIX
          description:
            en_us: Subnet Prefix
        - container: IMAGE_PREFIX
          description:
            en_us: Image Prefix
        - container: RELEASE
          description:
            en_us: Release
        - container: IMAGE_TAG
          description:
            en_us: Image Tag
        - container: POSTGRES_USER
          description:
            en_us: PostgreSQL User
        - container: POSTGRES_PASSWORD
          description:
            en_us: PostgreSQL password

  mgt:
    container_name: safeline-mgt
    restart: always
    image: ${IMAGE_PREFIX}/safeline-mgt-g${ARCH_SUFFIX}${RELEASE}:${IMAGE_TAG:?image tag required}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /DATA/AppData/Safeline/resources/mgt:/app/data
      - /DATA/AppData/Safeline/logs/nginx:/app/log/nginx:z
      - /DATA/AppData/Safeline/resources/sock:/app/sock
      - /var/run:/app/run
    ports:
      - ${MGT_PORT:-9443}:1443
    healthcheck:
      test: curl -k -f https://localhost:1443/api/open/health
    environment:
      - MGT_PG=postgres://safeline-ce:${POSTGRES_PASSWORD}@safeline-pg/safeline-ce?sslmode=disable
    depends_on:
      - postgres
      - fvm
    logging:
      options:
        max-size: "100m"
        max-file: "5"
    networks:
      safeline-ce:
        ipv4_address: ${SUBNET_PREFIX}.4

    x-casaos:
      envs:
        - container: SUBNET_PREFIX
          description:
            en_us: Subnet Prefix
        - container: IMAGE_PREFIX
          description:
            en_us: Image Prefix
        - container: RELEASE
          description:
            en_us: Release
        - container: IMAGE_TAG
          description:
            en_us: Image Tag
        - container: MGT_PORT
          description:
            en_us: Management panel port
        - container: POSTGRES_PASSWORD
          description:
            en_us: PostgreSQL password
      ports:
        - container: "1443"
          description:
            en_us: "Container Port: 1443"

  detect:
    container_name: safeline-detector
    restart: always
    image: ${IMAGE_PREFIX}/safeline-detector-g${ARCH_SUFFIX}${RELEASE}:${IMAGE_TAG}
    volumes:
      - /DATA/AppData/Safeline/resources/detector:/resources/detector
      - /DATA/AppData/Safeline/logs/detector:/logs/detector
      - /etc/localtime:/etc/localtime:ro
    environment:
      - LOG_DIR=/logs/detector
    networks:
      safeline-ce:
        ipv4_address: ${SUBNET_PREFIX}.5
    x-casaos:
      envs:
        - container: SUBNET_PREFIX
          description:
            en_us: Subnet Prefix
        - container: IMAGE_PREFIX
          description:
            en_us: Image Prefix
        - container: RELEASE
          description:
            en_us: Release
        - container: IMAGE_TAG
          description:
            en_us: Image Tag

  tengine:
    container_name: safeline-tengine
    restart: always
    image: ${IMAGE_PREFIX}/safeline-tengine-g${ARCH_SUFFIX}${RELEASE}:${IMAGE_TAG}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/resolv.conf:/etc/resolv.conf:ro
      - /DATA/AppData/Safeline/resources/nginx:/etc/nginx
      - /DATA/AppData/Safeline/resources/detector:/resources/detector
      - /DATA/AppData/Safeline/resources/chaos:/resources/chaos
      - /DATA/AppData/Safeline/logs/nginx:/var/log/nginx:z
      - /DATA/AppData/Safeline/resources/cache:/usr/local/nginx/cache
      - /DATA/AppData/Safeline/resources/sock:/app/sock
    environment:
      - TCD_MGT_API=https://${SUBNET_PREFIX}.4:1443/api/open/publish/server
      - TCD_SNSERVER=${SUBNET_PREFIX}.5:8000
      # deprecated
      - SNSERVER_ADDR=${SUBNET_PREFIX}.5:8000
    ulimits:
      nofile: 131072
    ports:
      - '80:80'
      - '443:443'
      - '65443:65443'
    x-casaos:
      envs:
        - container: SUBNET_PREFIX
          description:
            en_us: Subnet Prefix
        - container: IMAGE_PREFIX
          description:
            en_us: Image Prefix
        - container: RELEASE
          description:
            en_us: Release
        - container: IMAGE_TAG
          description:
            en_us: Image Tag
      ports:
        - container: "80"
          description:
            en_us: "Container Port: 80"
        - container: "443"
          description:
            en_us: "Container Port: 443"
        - container: "65443"
          description:
            en_us: "Container Port: 65443"

  luigi:
    container_name: safeline-luigi
    restart: always
    image: ${IMAGE_PREFIX}/safeline-luigi-g${ARCH_SUFFIX}${RELEASE}:${IMAGE_TAG}
    environment:
      - MGT_IP=${SUBNET_PREFIX}.4
      - LUIGI_PG=postgres://safeline-ce:${POSTGRES_PASSWORD}@safeline-pg/safeline-ce?sslmode=disable
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /DATA/AppData/Safeline/resources/luigi:/app/data
    logging:
      options:
        max-size: "100m"
        max-file: "5"
    depends_on:
      - detect
      - mgt
    networks:
      safeline-ce:
        ipv4_address: ${SUBNET_PREFIX}.7
    x-casaos:
      envs:
        - container: SUBNET_PREFIX
          description:
            en_us: Subnet Prefix
        - container: IMAGE_PREFIX
          description:
            en_us: Image Prefix
        - container: RELEASE
          description:
            en_us: Release
        - container: IMAGE_TAG
          description:
            en_us: Image Tag
        - container: POSTGRES_PASSWORD
          description:
            en_us: PostgreSQL password

  fvm:
    container_name: safeline-fvm
    restart: always
    image: ${IMAGE_PREFIX}/safeline-fvm-g${ARCH_SUFFIX}${RELEASE}:${IMAGE_TAG}
    volumes:
      - /etc/localtime:/etc/localtime:ro
    logging:
      options:
        max-size: "100m"
        max-file: "5"
    networks:
      safeline-ce:
        ipv4_address: ${SUBNET_PREFIX}.8
    x-casaos:
      envs:
        - container: SUBNET_PREFIX
          description:
            en_us: Subnet Prefix
        - container: IMAGE_PREFIX
          description:
            en_us: Image Prefix
        - container: RELEASE
          description:
            en_us: Release
        - container: IMAGE_TAG
          description:
            en_us: Image Tag
        - container: POSTGRES_PASSWORD
          description:
            en_us: PostgreSQL password

  chaos:
    container_name: safeline-chaos
    restart: always
    image: ${IMAGE_PREFIX}/safeline-chaos-g${ARCH_SUFFIX}${RELEASE}:${IMAGE_TAG}
    logging:
      options:
        max-size: "100m"
        max-file: "10"
    volumes:
      - /DATA/AppData/Safeline/resources/sock:/app/sock
      - /DATA/AppData/Safeline/resources/chaos:/app/chaos
    networks:
      safeline-ce:
        ipv4_address: ${SUBNET_PREFIX}.10
    x-casaos:
      envs:
        - container: SUBNET_PREFIX
          description:
            en_us: Subnet Prefix
        - container: IMAGE_PREFIX
          description:
            en_us: Image Prefix
        - container: RELEASE
          description:
            en_us: Release
        - container: IMAGE_TAG
          description:
            en_us: Image Tag
        - container: POSTGRES_PASSWORD
          description:
            en_us: PostgreSQL password

networks:
  safeline-ce:
    name: safeline-ce
    driver: bridge
    ipam:
      driver: default
      config:
        - gateway: ${SUBNET_PREFIX:?SUBNET_PREFIX required}.1
          subnet: ${SUBNET_PREFIX}.0/24
    driver_opts:
      com.docker.network.bridge.name: safeline-ce

x-casaos:
  architectures:
    - amd64
    - arm64
  main: mgt
  description:
    en_us: |
        SafeLine is a self-hosted WAF(Web Application Firewall) to protect your web apps from attacks and exploits.

        A web application firewall helps protect web apps by filtering and monitoring HTTP traffic between a web application and the Internet. It typically protects web apps from attacks such as SQL injection, XSS, code injection, os command injection, CRLF injection, ldap injection, xpath injection, RCE, XXE, SSRF, path traversal, backdoor, bruteforce, http-flood, bot abused, among others.
  tagline:
    en_us: SafeLine
  developer: "chaitin"
  author: s3tupw1zard
  icon: https://raw.githubusercontent.com/s3tupw1zard/CasaOS-AppStore/refs/heads/main/Apps/SafeLine/safeline-logo.png
  thumbnail: ""
  title:
    en_us: SafeLine
  category: s3tupw1zard
  port_map: "80"
  scheme: http
  tips:
    before_install:
      en_us: |
        IMPORTANT: If you need to customize the subnet used by SafeLine, you need to set it in every container, so that all containers can reach each other.

        Also ensure that you provide the needed environment variables like IMAGE_TAG (most probably latest), MGT_PORT, POSTGRES_PASSWORD (please replace the provided one with your on secure password), SUBNET_PREFIX (default: 172.22.222), IMAGE_PREFIX (can most probably be left as is).
        Optionally you can fill IMAGE_PREFIX with `-arm` if you are running CasaOS on arm based systems like the Raspberry Pi and RELEASE with `-lts` if you want to use the lts version.

        After installation make sure to create your admin account on https://<your-ip>:9443