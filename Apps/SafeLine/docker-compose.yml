name: safeline

services:
  postgres:
    container_name: safeline-pg
    restart: always
    image: chaitin/safeline-postgres:15.2
    volumes:
      - /DATA/AppData/Safeline/resources/postgres/data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_USER=safeline-ce
      - POSTGRES_PASSWORD=dyrE4mfoHFhoBBbl5tKJrs8XfKr9aLV4CHPmmHE2Wt5aNWYwPbPy79XhuUd3vZcq
    networks:
      safeline-ce:
        ipv4_address: 172.22.222.2
    command: [postgres, -c, max_connections=600]
    healthcheck:
      test: pg_isready -U safeline-ce -d safeline-ce
    x-casaos:
      envs:
        - container: POSTGRES_PASSWORD
          description:
            en_us: PostgreSQL password#
      volumes:
        - container: /var/lib/postgresql/data
          description:
            en_us: "Container Path: /var/lib/postgresql/data"
        - container: /etc/localtime
          description:
            en_us: "Container Path: /etc/localtime"

  mgt:
    container_name: safeline-mgt
    restart: always
    image: chaitin/safeline-mgt-g:7.2.4
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /DATA/AppData/Safeline/resources/mgt:/app/data
      - /DATA/AppData/Safeline/logs/nginx:/app/log/nginx
      - /DATA/AppData/Safeline/resources/sock:/app/sock
      - /var/run:/app/run
    ports:
      - 9443:1443
    healthcheck:
      test: curl -k -f https://localhost:1443/api/open/health
    environment:
      - MGT_PG=postgres://safeline-ce:${POSTGRES_PASSWORD}@safeline-pg/safeline-ce?sslmode=disable
    depends_on:
      - postgres
      - fvm
    logging:
      options:
        max-size: "100m"
        max-file: "5"
    networks:
      safeline-ce:
        ipv4_address: 172.22.222.4
    x-casaos:
      envs:
        - container: POSTGRES_PASSWORD
          description:
            en_us: PostgreSQL password
      volumes:
        - container: /etc/localtime
          description:
            en_us: "Container Path: /etc/localtime"
        - container: /app/data
          description:
            en_us: "Container Path: /app/data"
        - container: /app/log/nginx
          description:
            en_us: "Container Path: /app/log/nginx"
        - container: /app/sock
          description:
            en_us: "Container Path: /app/sock"
        - container: /app/run
          description:
            en_us: "Container Path: /app/run"
      ports:
        - container: "1443"
          description:
            en_us: "Container Port: 1443"

  detect:
    container_name: safeline-detector
    restart: always
    image: chaitin/safeline-detector-g:7.2.4
    volumes:
      - /DATA/AppData/Safeline/resources/detector:/resources/detector
      - /DATA/AppData/Safeline/logs/detector:/logs/detector
      - /etc/localtime:/etc/localtime:ro
    environment:
      - LOG_DIR=/logs/detector
    networks:
      safeline-ce:
        ipv4_address: 172.22.222.5
    x-casaos:
      volumes:
        - container: /etc/localtime
          description:
            en_us: "Container Path: /etc/localtime"
        - container: /resources/detector
          description:
            en_us: "Container Path: /resources/detector"
        - container: /logs/detector
          description:
            en_us: "Container Path: /logs/detector"
  tengine:
    container_name: safeline-tengine
    restart: always
    image: chaitin/safeline-tengine-g:7.2.4
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/resolv.conf:/etc/resolv.conf:ro
      - /DATA/AppData/Safeline/resources/nginx:/etc/nginx
      - /DATA/AppData/Safeline/resources/detector:/resources/detector
      - /DATA/AppData/Safeline/resources/chaos:/resources/chaos
      - /DATA/AppData/Safeline/logs/nginx:/var/log/nginx
      - /DATA/AppData/Safeline/resources/cache:/usr/local/nginx/cache
      - /DATA/AppData/Safeline/resources/sock:/app/sock
    environment:
      - TCD_MGT_API=https://172.22.222.4:1443/api/open/publish/server
      - TCD_SNSERVER=172.22.222.5:8000
      # deprecated
      - SNSERVER_ADDR=172.22.222.5:8000
    ulimits:
      nofile: 131072
    ports:
      - '80:80'
      - '443:443'
      - '65443:65443'
    x-casaos:
      volumes:
        - container: /etc/localtime
          description:
            en_us: "Container Path: /etc/localtime"
        - container: /etc/resolv.conf
          description:
            en_us: "Container Path: /etc/resolv.conf"
        - container: /etc/nginx
          description:
            en_us: "Container Path: /etc/nginx"
        - container: /resources/detector
          description:
            en_us: "Container Path: /resources/detector"
        - container: /resources/chaos
          description:
            en_us: "Container Path: /resources/chaos"
        - container: /var/log/nginx
          description:
            en_us: "Container Path: /var/log/nginx"
        - container: /usr/local/nginx/cache
          description:
            en_us: "Container Path: /usr/local/nginx/cache"
        - container: /app/sock
          description:
            en_us: "Container Path: /app/sock"
      ports:
        - container: "80"
          description:
            en_us: "Container Port: 80"
        - container: "443"
          description:
            en_us: "Container Port: 443"
        - container: "65443"
          description:
            en_us: "Container Port: 65443"

  luigi:
    container_name: safeline-luigi
    restart: always
    image: chaitin/safeline-luigi-g:7.2.4
    environment:
      - MGT_IP=172.22.222.4
      - LUIGI_PG=postgres://safeline-ce:${POSTGRES_PASSWORD}@safeline-pg/safeline-ce?sslmode=disable
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /DATA/AppData/Safeline/resources/luigi:/app/data
    logging:
      options:
        max-size: "100m"
        max-file: "5"
    depends_on:
      - detect
      - mgt
    networks:
      safeline-ce:
        ipv4_address: 172.22.222.7
    x-casaos:
      volumes:
        - container: /etc/localtime
          description:
            en_us: "Container Path: /etc/localtime"
        - container: /app/data
          description:
            en_us: "Container Path: /app/data"
      envs:
        - container: POSTGRES_PASSWORD
          description:
            en_us: PostgreSQL password

  fvm:
    container_name: safeline-fvm
    restart: always
    image: chaitin/safeline-fvm-g:7.2.4
    volumes:
      - /etc/localtime:/etc/localtime:ro
    logging:
      options:
        max-size: "100m"
        max-file: "5"
    networks:
      safeline-ce:
        ipv4_address: 172.22.222.8
    x-casaos:
      volumes:
        - container: /etc/localtime
          description:
            en_us: "Container Path: /etc/localtime"
      envs:
        - container: POSTGRES_PASSWORD
          description:
            en_us: PostgreSQL password

  chaos:
    container_name: safeline-chaos
    restart: always
    image: chaitin/safeline-chaos-g:7.2.4
    logging:
      options:
        max-size: "100m"
        max-file: "10"
    volumes:
      - /DATA/AppData/Safeline/resources/sock:/app/sock
      - /DATA/AppData/Safeline/resources/chaos:/app/chaos
    networks:
      safeline-ce:
        ipv4_address: 172.22.222.10
    x-casaos:
      volumes:
        - container: /app/sock
          description:
            en_us: "Container Path: /app/sock"
        - container: /app/chaos
          description:
            en_us: "Container Path: /app/chaos"
      envs:
        - container: POSTGRES_PASSWORD
          description:
            en_us: PostgreSQL password

networks:
  safeline-ce:
    name: safeline-ce
    driver: bridge
    ipam:
      driver: default
      config:
        - gateway: 172.22.222.1
          subnet: 172.22.222.0/24
    driver_opts:
      com.docker.network.bridge.name: safeline-ce

x-casaos:
  architectures:
    - amd64
  main: mgt
  description:
    en_us: |
        SafeLine is a self-hosted WAF(Web Application Firewall) to protect your web apps from attacks and exploits.

        A web application firewall helps protect web apps by filtering and monitoring HTTP traffic between a web application and the Internet. It typically protects web apps from attacks such as SQL injection, XSS, code injection, os command injection, CRLF injection, ldap injection, xpath injection, RCE, XXE, SSRF, path traversal, backdoor, bruteforce, http-flood, bot abused, among others.
  tagline:
    en_us: SafeLine
  developer: "chaitin"
  author: s3tupw1zard
  icon: https://raw.githubusercontent.com/s3tupw1zard/CasaOS-AppStore/refs/heads/main/Apps/SafeLine/safeline-logo.png
  thumbnail: ""
  title:
    en_us: SafeLine
  category: s3tupw1zard
  port_map: "9443"
  scheme: https
  tips:
    before_install:
      en_us: |
        IMPORTANT: If you need to customize the subnet used by SafeLine, you need to set it in every container, so that all containers can reach each other.

        Also remember to replace the postgres password with your own one.

        After installation make sure to create your admin account on https://<your-ip>:9443